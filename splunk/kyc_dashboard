<form>
  <label>k8s-KYC</label>
  <description>Know Your Cluster stats in last 15 minutes</description>
  <fieldset submitButton="false" autoRun="false">
    <input type="dropdown" token="cluster" searchWhenChanged="true">
      <label>Select cluster</label>
      <choice value="*">All clusters</choice>
      <choice value="*dev*">Dev clusters</choice>
      <choice value="*prod*">Prod clusters</choice>
      <choice value="*stg*">Stg clusters</choice>
      <choice value="*test*">Test clusters</choice>
      <choice value="*avm*">AVM clusters</choice>
      <choice value="*dna*">DNA clusters</choice>
      <choice value="*mvp*">MVP clusters</choice>
      <choice value="*org*">ORG clusters</choice>
      <choice value="*pso*">PSO clusters</choice>
      <choice value="*tnd*">T&amp;D clusters</choice>
      <fieldForLabel>cluster_name</fieldForLabel>
      <fieldForValue>cluster_name</fieldForValue>
      <search>
        <query>cluster_name="*aws*" AND cluster_name="*mckinsey*"| dedup cluster_name |  table cluster_name | sort cluster_name</query>
        <earliest>-24h@h</earliest>
        <latest>now</latest>
      </search>
    </input>
    <input type="dropdown" token="namespace" searchWhenChanged="true">
      <label>Select namespace</label>
      <fieldForLabel>namespace</fieldForLabel>
      <fieldForValue>namespace</fieldForValue>
      <search>
        <query>cluster_name=$cluster$ AND cluster_name="*cloud*" sourcetype="kube:objects:namespaces" | dedup metadata.name |  table metadata.name | sort metadata.name | rename metadata.name as namespace</query>
        <earliest>-15m</earliest>
        <latest>now</latest>
      </search>
      <choice value="*">All</choice>
      <default>default</default>
      <initialValue>default</initialValue>
    </input>
    <input type="dropdown" token="pod" searchWhenChanged="false">
      <label>Select pod</label>
      <fieldForLabel>metadata.name</fieldForLabel>
      <fieldForValue>metadata.name</fieldForValue>
      <search>
        <query>cluster_name=$cluster$ AND cluster_name="*cloud*"  sourcetype="kube:objects:pods" metadata.namespace=$namespace$ status.phase=Running OR status.phase=Succeeded | dedup metadata.name |  table metadata.name | sort metadata.name</query>
        <earliest>-60m@m</earliest>
        <latest>now</latest>
      </search>
    </input>
  </fieldset>
  <row>
    <panel>
      <single>
        <title>Total clusters</title>
        <search>
          <query>cluster_name="*aws*" AND cluster_name="*mckinsey*" index="*_red_*" sourcetype="kube:container:*" | dedup cluster_name | stats count</query>
          <earliest>-15m@m</earliest>
          <latest>now</latest>
        </search>
        <option name="drilldown">none</option>
        <option name="rangeColors">["0x006d9c","0x006d9c"]</option>
        <option name="rangeValues">[0]</option>
        <option name="refresh.display">progressbar</option>
        <option name="useColors">1</option>
      </single>
    </panel>
    <panel>
      <single>
        <title>Total nodes</title>
        <search>
          <query>cluster_name="*aws*" AND cluster_name="*mckinsey*" sourcetype="kube:objects:nodes" | dedup "metadata.name" | table by "metadata.name" |  stats count</query>
          <earliest>-15m@m</earliest>
          <latest>now</latest>
        </search>
        <option name="drilldown">none</option>
        <option name="rangeColors">["0x53a051","0x006d9c"]</option>
        <option name="rangeValues">[0]</option>
        <option name="refresh.display">progressbar</option>
        <option name="useColors">1</option>
      </single>
    </panel>
    <panel>
      <single>
        <title>Total CPU cores across all clusters</title>
        <search>
          <query>cluster_name="*aws*" AND cluster_name="*mckinsey*" sourcetype="kube:objects:nodes""metadata.labels.node.kubernetes.io/role"=node OR "metadata.labels.kubernetes.io/role"=node | dedup "metadata.name" | stats sum("status.capacity.cpu") as "Total CPU"</query>
          <earliest>-15m@m</earliest>
          <latest>now</latest>
        </search>
        <option name="drilldown">none</option>
        <option name="rangeColors">["0x53a051","0x006d9c"]</option>
        <option name="rangeValues">[0]</option>
        <option name="refresh.display">progressbar</option>
        <option name="useColors">1</option>
      </single>
    </panel>
    <panel>
      <single>
        <title>Total memory allocation across all clusters</title>
        <search>
          <query>cluster_name="*aws*" AND cluster_name="*mckinsey*" sourcetype="kube:objects:nodes" "metadata.labels.node.kubernetes.io/role"=node OR "metadata.labels.kubernetes.io/role"=node | dedup "metadata.name"  | rex field="status.capacity.memory" mode=sed "s/Ki//g" | stats sum("status.capacity.memory") as Total_Memory | eval Total_Memory=tonumber(Total_Memory)/1000000</query>
          <earliest>-15m@m</earliest>
          <latest>now</latest>
        </search>
        <option name="drilldown">none</option>
        <option name="rangeColors">["0x53a051","0x006d9c"]</option>
        <option name="rangeValues">[0]</option>
        <option name="refresh.display">progressbar</option>
        <option name="unit">GB</option>
        <option name="useColors">1</option>
      </single>
    </panel>
    <panel>
      <single>
        <title>Total PVC storage allocation on all clusters</title>
        <search>
          <query>cluster_name="*mckinsey*" AND cluster_name="*aws*" sourcetype="kube:objects:persistent_volume_claims" status.capacity.storage="*Gi*" | dedup metadata.name | rename "status.capacity.storage" as Storage  | rex field=Storage mode=sed "s/Gi//g" | stats sum(Storage) as Stoage_GB |  appendcols[search cluster_name="*mckinsey*" AND cluster_name="*aws*" sourcetype="kube:objects:persistent_volume_claims" status.capacity.storage="*Mi*" | dedup metadata.name | rename "status.capacity.storage" as StorageMB  | rex field=Storage2 mode=sed "s/Mi//g" | stats sum(Storage2) as Stoage_MB] | eval Total_Storage=sum(Stoage_GB+tonumber(Stoage_MB/1000))</query>
          <earliest>-15m@m</earliest>
          <latest>now</latest>
        </search>
        <option name="drilldown">none</option>
        <option name="numberPrecision">0</option>
        <option name="rangeColors">["0x53a051","0x006d9c"]</option>
        <option name="rangeValues">[0]</option>
        <option name="refresh.display">progressbar</option>
        <option name="unit">GB</option>
        <option name="useColors">1</option>
      </single>
    </panel>
  </row>
  <row>
    <panel>
      <chart>
        <title>Tenant wise all cluster count</title>
        <search>
          <query>cluster_name!="*test*" AND cluster_name="*mckinsey*"  AND cluster_name="*aws*" sourcetype="kube:container:*" | dedup cluster_name  | rex field=cluster_name  mode=sed "s/0.*//g" | stats count by cluster_name | rename cluster_name as "solution name"</query>
          <earliest>-15m@m</earliest>
          <latest>now</latest>
        </search>
        <option name="charting.axisTitleX.visibility">visible</option>
        <option name="charting.axisTitleY.visibility">visible</option>
        <option name="charting.axisTitleY2.visibility">visible</option>
        <option name="charting.chart">pie</option>
        <option name="charting.chart.showDataLabels">minmax</option>
        <option name="charting.chart.stackMode">default</option>
        <option name="charting.drilldown">none</option>
        <option name="charting.layout.splitSeries">1</option>
        <option name="charting.legend.labelStyle.overflowMode">ellipsisEnd</option>
        <option name="charting.legend.placement">right</option>
        <option name="refresh.display">progressbar</option>
      </chart>
    </panel>
    <panel>
      <chart>
        <title>Env wise all cluster count</title>
        <search>
          <query>cluster_name="*mckinsey*" AND cluster_name="*aws*" sourcetype="kube:container:*" | dedup cluster_name  | rex field=cluster_name  mode=sed "s/^[^.]*.//g" | rex field=cluster_name  mode=sed "s/\..*//g" | stats count by cluster_name | rename cluster_name as "env"</query>
          <earliest>-15m@m</earliest>
          <latest>now</latest>
        </search>
        <option name="charting.axisTitleX.visibility">visible</option>
        <option name="charting.axisTitleY.visibility">visible</option>
        <option name="charting.axisTitleY2.visibility">visible</option>
        <option name="charting.chart">pie</option>
        <option name="charting.chart.showDataLabels">all</option>
        <option name="charting.drilldown">none</option>
        <option name="charting.legend.placement">right</option>
        <option name="refresh.display">progressbar</option>
      </chart>
    </panel>
    <panel>
      <chart>
        <title>AWS region wise all cluster distribution</title>
        <search>
          <query>sourcetype="kube:objects:nodes" cluster_name="*mckinsey*" AND cluster_name="*aws*" | dedup cluster_name | stats count by metadata.labels.failure-domain.beta.kubernetes.io/region</query>
          <earliest>-15m@m</earliest>
          <latest>now</latest>
        </search>
        <option name="charting.chart">pie</option>
        <option name="charting.drilldown">all</option>
        <option name="refresh.display">progressbar</option>
        <drilldown>
          <link target="_blank">https://aws.amazon.com/about-aws/global-infrastructure/regions_az/</link>
        </drilldown>
      </chart>
    </panel>
  </row>
  <row>
    <panel>
      <chart>
        <title>Memory(GB) allocation across all clusters</title>
        <search>
          <query>cluster_name="*mckinsey*"AND cluster_name="*aws*" sourcetype="kube:objects:nodes" "metadata.labels.node.kubernetes.io/role"=node OR "metadata.labels.kubernetes.io/role"=node | dedup "metadata.name"  | rex field="status.capacity.memory" mode=sed "s/Ki//g" | stats sum("status.capacity.memory") as Total_Memory by cluster_name | eval Total_Memory=tonumber(Total_Memory)/1000000</query>
          <earliest>-15m@m</earliest>
          <latest>now</latest>
        </search>
        <option name="charting.axisTitleX.visibility">visible</option>
        <option name="charting.axisTitleY.visibility">visible</option>
        <option name="charting.axisTitleY2.visibility">visible</option>
        <option name="charting.axisY.scale">linear</option>
        <option name="charting.chart">pie</option>
        <option name="charting.drilldown">none</option>
        <option name="charting.legend.placement">none</option>
        <option name="refresh.display">progressbar</option>
      </chart>
    </panel>
    <panel>
      <chart>
        <title>CPU allocation across all clusters</title>
        <search>
          <query>cluster_name="*aws*" sourcetype="kube:objects:nodes" "metadata.labels.node.kubernetes.io/role"=node OR "metadata.labels.kubernetes.io/role"=node | dedup "metadata.name" | stats sum("status.capacity.cpu") as "Total CPU" by cluster_name</query>
          <earliest>-15m@m</earliest>
          <latest>now</latest>
        </search>
        <option name="charting.axisLabelsX.majorLabelStyle.overflowMode">ellipsisMiddle</option>
        <option name="charting.axisLabelsX.majorLabelStyle.rotation">0</option>
        <option name="charting.axisTitleX.visibility">visible</option>
        <option name="charting.axisTitleY.visibility">visible</option>
        <option name="charting.axisTitleY2.visibility">visible</option>
        <option name="charting.axisY.abbreviation">none</option>
        <option name="charting.axisY.scale">linear</option>
        <option name="charting.axisY2.enabled">0</option>
        <option name="charting.chart">pie</option>
        <option name="charting.chart.showDataLabels">minmax</option>
        <option name="charting.chart.stackMode">default</option>
        <option name="charting.drilldown">none</option>
        <option name="charting.layout.splitSeries">0</option>
        <option name="charting.layout.splitSeries.allowIndependentYRanges">0</option>
        <option name="charting.legend.placement">none</option>
        <option name="refresh.display">progressbar</option>
      </chart>
    </panel>
    <panel>
      <chart>
        <title>PVC storage allocation across all clusters in GB</title>
        <search>
          <query>cluster_name="*mckinsey*" AND cluster_name="*aws*" sourcetype="kube:objects:persistent_volume_claims" | dedup metadata.name | rex field="status.capacity.storage" mode=sed "s/Gi//g"  |  stats sum("status.capacity.storage") as Total_PVC_storage by cluster_name</query>
          <earliest>-15m@m</earliest>
          <latest>now</latest>
        </search>
        <option name="charting.chart">pie</option>
        <option name="charting.drilldown">none</option>
      </chart>
    </panel>
    <panel>
      <viz type="semicircle_donut.semicircle_donut">
        <title>Namespaces count running across all clusters</title>
        <search>
          <query>cluster_name="*aws*" sourcetype="kube:objects:namespaces" | dedup metadata.uid | chart count by cluster_name</query>
          <earliest>-15m@m</earliest>
          <latest>now</latest>
        </search>
        <option name="drilldown">none</option>
        <option name="refresh.display">progressbar</option>
        <option name="semicircle_donut.semicircle_donut.cutoutPercentage">50</option>
        <option name="semicircle_donut.semicircle_donut.legendPosition">none</option>
        <option name="semicircle_donut.semicircle_donut.type">full</option>
      </viz>
    </panel>
  </row>
  <row>
    <panel>
      <single>
        <title>Total nodes on cluster $cluster$</title>
        <search>
          <query>cluster_name=$cluster$ AND cluster_name="*aws*" sourcetype="kube:objects:nodes" | dedup "metadata.name" | table by "metadata.name" |  stats count</query>
          <earliest>-15m@m</earliest>
          <latest>now</latest>
        </search>
        <option name="drilldown">none</option>
        <option name="refresh.display">progressbar</option>
      </single>
    </panel>
    <panel>
      <single>
        <title>Total master nodes on cluster $cluster$</title>
        <search>
          <query>cluster_name=$cluster$ AND cluster_name="*aws*" sourcetype="kube:objects:nodes" "metadata.labels.node.kubernetes.io/role"=master OR "metadata.labels.kubernetes.io/role"=master| dedup "metadata.name" | table by "metadata.name" |  stats count</query>
          <earliest>-60m@m</earliest>
          <latest>now</latest>
        </search>
        <option name="drilldown">none</option>
        <option name="refresh.display">progressbar</option>
      </single>
    </panel>
    <panel>
      <single>
        <title>Total etcd nodes on cluster $cluster$</title>
        <search>
          <query>cluster_name=$cluster$ sourcetype="kube:objects:nodes" "metadata.labels.node.kubernetes.io/role"=etcd OR "metadata.labels.kubernetes.io/role"=etcd| dedup "metadata.name" | table by "metadata.name" |  stats count</query>
          <earliest>-15m</earliest>
          <latest>now</latest>
        </search>
        <option name="drilldown">none</option>
        <option name="refresh.display">progressbar</option>
      </single>
    </panel>
    <panel>
      <single>
        <title>Total worker nodes on cluster $cluster$</title>
        <search>
          <query>cluster_name=$cluster$ AND cluster_name="*aws*" sourcetype="kube:objects:nodes" "metadata.labels.node.kubernetes.io/role"=node OR "metadata.labels.kubernetes.io/role"=node| dedup "metadata.name" | table by "metadata.name" |  stats count</query>
          <earliest>-15m</earliest>
          <latest>now</latest>
        </search>
        <option name="drilldown">none</option>
        <option name="rangeColors">["0xf1813f","0xf1813f"]</option>
        <option name="rangeValues">[0]</option>
        <option name="refresh.display">progressbar</option>
        <option name="useColors">1</option>
      </single>
    </panel>
    <panel>
      <title></title>
      <single>
        <title>Total namespaces on cluster $cluster$</title>
        <search>
          <query>cluster_name=$cluster$ AND cluster_name="*aws*" sourcetype="kube:objects:namespaces" | dedup metadata.name | stats count</query>
          <earliest>-15m@m</earliest>
          <latest>now</latest>
        </search>
        <option name="drilldown">none</option>
        <option name="rangeColors">["0x53a051","0x53a051"]</option>
        <option name="rangeValues">[0]</option>
        <option name="refresh.display">progressbar</option>
        <option name="useColors">1</option>
      </single>
    </panel>
    <panel>
      <single>
        <title>Total pods in cluster $cluster$</title>
        <search>
          <query>cluster_name=$cluster$ AND cluster_name="*aws*" sourcetype="kube:objects:pods" | dedup metadata.name | stats count</query>
          <earliest>-15m@m</earliest>
          <latest>now</latest>
        </search>
        <option name="drilldown">none</option>
        <option name="refresh.display">progressbar</option>
      </single>
    </panel>
  </row>
  <row>
    <panel>
      <title></title>
      <single>
        <title>Total  CPU on worker node's of  cluster $cluster$</title>
        <search>
          <query>cluster_name=$cluster$  AND cluster_name="*aws*" sourcetype="kube:objects:nodes""metadata.labels.node.kubernetes.io/role"=node OR "metadata.labels.kubernetes.io/role"=node | dedup "metadata.name" | stats sum("status.capacity.cpu") as "Total CPU"</query>
          <earliest>-15m@m</earliest>
          <latest>now</latest>
        </search>
        <option name="colorMode">none</option>
        <option name="drilldown">none</option>
        <option name="rangeColors">["0xf8be34","0xf8be34"]</option>
        <option name="rangeValues">[0]</option>
        <option name="refresh.display">progressbar</option>
        <option name="useColors">1</option>
      </single>
    </panel>
    <panel>
      <title></title>
      <single>
        <title>Total Memory on worker node's of cluster $cluster$</title>
        <search>
          <query>cluster_name=$cluster$ AND cluster_name="*aws*" sourcetype="kube:objects:nodes" "metadata.labels.node.kubernetes.io/role"=node OR "metadata.labels.kubernetes.io/role"=node | dedup "metadata.name"  | rex field="status.capacity.memory" mode=sed "s/Ki//g" | stats sum("status.capacity.memory") as Total_Memory | eval Total_Memory=tonumber(Total_Memory)/1000000</query>
          <earliest>-15m@m</earliest>
          <latest>now</latest>
        </search>
        <option name="drilldown">none</option>
        <option name="numberPrecision">0</option>
        <option name="rangeColors">["0x006d9c","0xdc4e41"]</option>
        <option name="rangeValues">[400]</option>
        <option name="refresh.display">progressbar</option>
        <option name="unit">GB</option>
        <option name="useColors">1</option>
      </single>
    </panel>
    <panel>
      <single>
        <title>PVC storage allocation on cluster $cluster$</title>
        <search>
          <query>cluster_name="*mckinsey*" AND cluster_name="*aws*" AND cluster_name=$cluster$ sourcetype="kube:objects:persistent_volume_claims" status.capacity.storage="*Gi*" | dedup metadata.name | rename "status.capacity.storage" as Storage  | rex field=Storage mode=sed "s/Gi//g" | stats sum(Storage) as Stoage_GB |  appendcols[search cluster_name="*mckinsey*" AND cluster_name="*aws*" AND cluster_name=$cluster$  sourcetype="kube:objects:persistent_volume_claims" status.capacity.storage="*Mi*" | dedup metadata.name | rename "status.capacity.storage" as StorageMB  | rex field=Storage2 mode=sed "s/Mi//g" | stats sum(Storage2) as Stoage_MB] | eval Total_Storage=sum(Stoage_GB+tonumber(Stoage_MB/1000))</query>
          <earliest>-15m@m</earliest>
          <latest>now</latest>
        </search>
        <option name="drilldown">none</option>
        <option name="rangeColors">["0x53a051","0xf1813f"]</option>
        <option name="rangeValues">[0]</option>
        <option name="refresh.display">progressbar</option>
        <option name="unit">GB</option>
        <option name="useColors">1</option>
      </single>
    </panel>
  </row>
  <row>
    <panel>
      <chart>
        <title>Node types on cluster $cluster$</title>
        <search>
          <query>cluster_name=$cluster$ AND cluster_name="*aws*"  sourcetype="kube:objects:nodes"  | dedup "metadata.name" | rename "metadata.labels.beta.kubernetes.io/instance-type"  as "Instance type" | stats count by "Instance type"</query>
          <earliest>-15m@m</earliest>
          <latest>now</latest>
        </search>
        <option name="charting.chart">pie</option>
        <option name="charting.drilldown">all</option>
        <option name="refresh.display">progressbar</option>
        <drilldown>
          <link target="_blank">https://aws.amazon.com/ec2/instance-types/</link>
        </drilldown>
      </chart>
    </panel>
    <panel>
      <chart>
        <title>Node distribution in AZs for cluster $cluster$</title>
        <search>
          <query>cluster_name=$cluster$  AND cluster_name="*aws*" sourcetype="kube:objects:nodes" | dedup metadata.name | stats count by metadata.labels.topology.kubernetes.io/zone</query>
          <earliest>-15m@m</earliest>
          <latest>now</latest>
        </search>
        <option name="charting.chart">pie</option>
        <option name="charting.drilldown">none</option>
        <option name="refresh.display">progressbar</option>
      </chart>
    </panel>
    <panel>
      <chart>
        <title>Running workload kind in cluster $cluster$</title>
        <search>
          <query>cluster_name="*aws*" AND cluster_name=$cluster$ sourcetype="kube:objects:pods"   | dedup "metadata.generateName" | chart count by "metadata.ownerReferences{}.kind"</query>
          <earliest>-15m@m</earliest>
          <latest>now</latest>
        </search>
        <option name="charting.chart">pie</option>
        <option name="charting.drilldown">none</option>
        <option name="refresh.display">progressbar</option>
      </chart>
    </panel>
  </row>
  <row>
    <panel>
      <table>
        <title>Details for cluster $cluster$</title>
        <search>
          <query>cluster_name="$cluster$"  AND cluster_name="*aws*"  sourcetype="kube:objects:nodes" metadata.labels.node.kubernetes.io/role=node OR metadata.labels.kubernetes.io/role=node | dedup metadata.name  | rename status.nodeInfo.kubeletVersion as "k8s version", status.nodeInfo.osImage as "OS version", metadata.name as "Node", "metadata.labels.topology.kubernetes.io/region" as "AWS region" | rex field="OS version" mode=sed "s/[^0-9.]//g"  | table cluster_name "k8s version" "OS version"  "AWS region" | dedup cluster_name</query>
          <earliest>-60m@m</earliest>
          <latest>now</latest>
        </search>
        <option name="count">5</option>
        <option name="drilldown">cell</option>
        <option name="refresh.display">progressbar</option>
        <option name="rowNumbers">true</option>
        <option name="totalsRow">false</option>
      </table>
    </panel>
    <panel>
      <table>
        <title>Etcd status on cluster $cluster$</title>
        <search>
          <query>cluster_name="*aws*" AND cluster_name=$cluster$ sourcetype="kube:objects:component_statuses" metadata.name="etcd*"| dedup cluster_name | rex field="conditions{}.status" mode=sed "s/True/Healthy/g" | rename conditions{}.status as "etcd status" | table cluster_name  "etcd status"</query>
          <earliest>-15m@m</earliest>
          <latest>now</latest>
        </search>
        <option name="count">5</option>
        <option name="drilldown">cell</option>
        <option name="rowNumbers">false</option>
        <option name="wrap">true</option>
        <format type="color" field="etcd status">
          <colorPalette type="map">{"Healthy":#53A051}</colorPalette>
        </format>
      </table>
    </panel>
  </row>
  <row>
    <panel>
      <chart>
        <title>Cluster-wise pod count for cluster $cluster$</title>
        <search>
          <query>cluster_name=$cluster$  AND cluster_name="*aws*" sourcetype="kube:objects:pods" | dedup metadata.name | stats count by cluster_name | dedup cluster_name</query>
          <earliest>-15m@m</earliest>
          <latest>now</latest>
        </search>
        <option name="charting.chart">pie</option>
        <option name="charting.drilldown">none</option>
        <option name="refresh.display">progressbar</option>
      </chart>
    </panel>
    <panel>
      <chart>
        <title>Node-wise pod distribution on cluster $cluster$</title>
        <search>
          <query>cluster_name=$cluster$ sourcetype="kube:objects:pods" | dedup metadata.name | dedup spec.nodeName | stats count by spec.nodeName</query>
          <earliest>-4h@m</earliest>
          <latest>now</latest>
        </search>
        <option name="charting.axisTitleX.visibility">visible</option>
        <option name="charting.axisTitleY.visibility">visible</option>
        <option name="charting.axisTitleY2.visibility">visible</option>
        <option name="charting.chart">pie</option>
        <option name="charting.drilldown">none</option>
        <option name="charting.legend.placement">right</option>
        <option name="refresh.display">progressbar</option>
      </chart>
    </panel>
    <panel>
      <chart>
        <title>Namespace wise pod distribution on cluster $cluster$</title>
        <search>
          <query>cluster_name=$cluster$ sourcetype="kube:objects:pods" | dedup metadata.name | stats count by metadata.namespace</query>
          <earliest>-15m</earliest>
          <latest>now</latest>
        </search>
        <option name="charting.chart">pie</option>
        <option name="charting.drilldown">none</option>
        <option name="refresh.display">progressbar</option>
      </chart>
    </panel>
  </row>
  <row>
    <panel>
      <table>
        <title>Node details of cluster $cluster$</title>
        <search>
          <query>cluster_name="*aws*" AND cluster_name=$cluster$ sourcetype="kube:objects:nodes" |  dedup "metadata.name" | rex field="status.capacity.memory" mode=sed "s/Ki//g" | rename "status.capacity.memory" as Total_Memory | eval Total_Memory=tonumber(Total_Memory)/1000000 | eval nodeStatus = mvindex('status.conditions{}.status', 4) | rex field="nodeStatus" mode=sed "s/True/Ready/g"| table "metadata.name" nodeStatus "metadata.labels.failure-domain.beta.kubernetes.io/region" "metadata.labels.node.kubernetes.io/role" "metadata.labels.beta.kubernetes.io/instance-type" "status.nodeInfo.osImage" "status.nodeInfo.kubeletVersion" "status.capacity.cpu" Total_Memory | rename "metadata.name" as "Node name", "metadata.labels.failure-domain.beta.kubernetes.io/region" as "AWS region", "metadata.labels.node.kubernetes.io/role" as "Role", "metadata.labels.beta.kubernetes.io/instance-type" as "Instance type", "status.nodeInfo.osImage" as "OS Version", "status.nodeInfo.kubeletVersion" as "k8s version",  "status.capacity.cpu" as "Total CPU", Total_Memory as "Total Memory"</query>
          <earliest>-15m@m</earliest>
          <latest>now</latest>
        </search>
        <option name="count">10</option>
        <option name="drilldown">cell</option>
        <option name="refresh.display">progressbar</option>
        <option name="rowNumbers">true</option>
        <option name="totalsRow">true</option>
        <format type="number" field="Total Memory">
          <option name="precision">1</option>
        </format>
      </table>
    </panel>
  </row>
  <row>
    <panel>
      <table>
        <title>Add-ons running on cluster $cluster$</title>
        <search>
          <query>cluster_name="*mckinsey*" AND cluster_name="*aws*" AND cluster_name=$cluster$ sourcetype="kube:objects:pods" metadata.ownerReferences{}.kind!=Node metadata.namespace IN (kube-system, monitoring, kubernetes-dashboard, openunison, argocd) | dedup spec.containers{}.name | eval Version = mvindex('spec.containers{}.image', 0) | rex field="Version" mode=sed "s/.*://g" | rename spec.serviceAccount as Name, metadata.labels.app as App_name, metadata.namespace as Namespace|  eval Name=if(Name=="default", App_name, Name) | table Name Version Namespace</query>
          <earliest>-15m@m</earliest>
          <latest>now</latest>
        </search>
        <option name="drilldown">cell</option>
        <option name="rowNumbers">true</option>
      </table>
    </panel>
  </row>
  <row>
    <panel>
      <chart>
        <title>Pods count by status in ns $namespace$ on cluster $cluster$</title>
        <search>
          <query>cluster_name=$cluster$ AND cluster_name="*aws*" sourcetype="kube:objects:pods" metadata.namespace=$namespace$ | dedup metadata.name | chart count by status.phase</query>
          <earliest>-15m@m</earliest>
          <latest>now</latest>
        </search>
        <option name="charting.chart">pie</option>
        <option name="charting.drilldown">none</option>
        <option name="refresh.display">progressbar</option>
      </chart>
    </panel>
    <panel>
      <chart>
        <title>Deployment health in cluster $cluster$ in namespace $namespace$</title>
        <search>
          <query>cluster_name="*mckinsey*" AND cluster_name="*aws*" AND cluster_name="*dna01.dev*" metadata.namespace=$namespace$ sourcetype="kube:objects:deployments"   spec.replicas!=0 status.observedGeneration=1 | dedup "metadata.name" | rename status.readyReplicas AS ReadyReplicas, status.replicas AS Replicas | eval Status=if(ReadyReplicas==Replicas, "Healthy", "Not-Healthy") | stats count by Status</query>
          <earliest>-15m@m</earliest>
          <latest>now</latest>
        </search>
        <option name="charting.chart">pie</option>
        <option name="charting.drilldown">none</option>
      </chart>
    </panel>
    <panel>
      <chart>
        <title>DaemonSets health in cluster $cluster$ in namespace $namespace$</title>
        <search>
          <query>cluster_name="*mckinsey*" AND cluster_name="*aws*" AND cluster_name=$cluster$ sourcetype="kube:objects:daemon_sets" "metadata.namespace"="$namespace$" status.observedGeneration=1 status.desiredNumberScheduled!=0 | dedup "metadata.name" | rename status.numberReady AS ReadyReplicas, status.desiredNumberScheduled AS Replicas | eval Status=if(ReadyReplicas==Replicas, "Healthy", "Not-Healthy") | stats count by Status</query>
          <earliest>-15m@m</earliest>
          <latest>now</latest>
        </search>
        <option name="charting.chart">pie</option>
        <option name="charting.drilldown">none</option>
        <option name="refresh.display">progressbar</option>
      </chart>
    </panel>
  </row>
  <row>
    <panel>
      <viz type="semicircle_donut.semicircle_donut">
        <title>qosClass of workloads in ns $namespace$ on cluster $cluster$</title>
        <search>
          <query>cluster_name="*aws*" AND cluster_name=$cluster$ sourcetype="kube:objects:pods" metadata.namespace=$namespace$ status.phase=Running | dedup "metadata.generateName"  | chart count by status.qosClass</query>
          <earliest>-15m@m</earliest>
          <latest>now</latest>
        </search>
        <option name="refresh.display">progressbar</option>
        <option name="semicircle_donut.semicircle_donut.cutoutPercentage">50</option>
        <option name="semicircle_donut.semicircle_donut.legendPosition">top</option>
        <option name="semicircle_donut.semicircle_donut.type">full</option>
      </viz>
    </panel>
    <panel>
      <viz type="semicircle_donut.semicircle_donut">
        <title>Workload kinds in ns $namespace$ on cluster $cluster$</title>
        <search>
          <query>cluster_name="*aws*" AND cluster_name=$cluster$ sourcetype="kube:objects:pods" metadata.namespace=$namespace$  | dedup "metadata.generateName" | chart count by "metadata.ownerReferences{}.kind" | rename "metadata.ownerReferences{}.kind" as "Object kind"</query>
          <earliest>-15m@m</earliest>
          <latest>now</latest>
        </search>
        <option name="semicircle_donut.semicircle_donut.cutoutPercentage">50</option>
        <option name="semicircle_donut.semicircle_donut.legendPosition">top</option>
        <option name="semicircle_donut.semicircle_donut.type">full</option>
      </viz>
    </panel>
  </row>
  <row>
    <panel>
      <table>
        <title>Deployments in cluster $cluster$  in namespace $namespace$</title>
        <search>
          <query>cluster_name="*mckinsey*" AND cluster_name="*aws*" AND cluster_name=$cluster$ sourcetype="kube:objects:deployments"  "metadata.namespace"="$namespace$"  spec.replicas!=0 status.observedGeneration=1 | dedup "metadata.name" | rename status.readyReplicas AS ReadyReplicas, status.replicas AS Replicas, metadata.name AS Deployment, metadata.namespace AS Namespace, "spec.template.spec.containers{}.name" AS Container, "spec.template.spec.containers{}.resources.requests.memory" AS "Mem Requests",  "spec.template.spec.containers{}.resources.limits.memory" AS "Mem Limits", "spec.template.spec.containers{}.resources.requests.cpu" AS "CPU Requests", "spec.template.spec.containers{}.resources.limits.cpu" AS "CPU Limits" | eval Status=if(ReadyReplicas==Replicas, "Healthy", "Not-Healthy") | table cluster_name Deployment Status Namespace Replicas Container "Mem Requests" "Mem Limits" "CPU Requests" "CPU Limits"</query>
          <earliest>-15m@m</earliest>
          <latest>now</latest>
        </search>
        <option name="count">5</option>
        <option name="drilldown">row</option>
        <option name="rowNumbers">true</option>
        <format type="color" field="Status">
          <colorPalette type="map">{"Healthy":#53A051,"Not-Healthy":#DC4E41}</colorPalette>
        </format>
      </table>
    </panel>
  </row>
  <row>
    <panel>
      <table>
        <title>DaemonSets in cluster $cluster$  in namespace $namespace$</title>
        <search>
          <query>cluster_name="*mckinsey*" AND cluster_name="*aws*" cluster_name=$cluster$ sourcetype="kube:objects:daemon_sets" "metadata.namespace"="$namespace$" status.observedGeneration=1 status.desiredNumberScheduled!=0 | dedup "metadata.name" | rename status.numberReady AS ReadyReplicas, status.desiredNumberScheduled AS Replicas, metadata.name AS DaemonSets, metadata.namespace AS Namespace, "spec.template.spec.containers{}.name" AS Container, "spec.template.spec.containers{}.resources.requests.memory" AS "Mem Requests",  "spec.template.spec.containers{}.resources.limits.memory" AS "Mem Limits", "spec.template.spec.containers{}.resources.requests.cpu" AS "CPU Requests", "spec.template.spec.containers{}.resources.limits.cpu" AS "CPU Limits" | eval Status=if(ReadyReplicas==Replicas, "Healthy", "Not-Healthy") | table cluster_name DaemonSets Status Namespace Replicas Container "Mem Requests" "Mem Limits" "CPU Requests" "CPU Limits"</query>
          <earliest>-15m@m</earliest>
          <latest>now</latest>
        </search>
        <option name="drilldown">row</option>
        <option name="refresh.display">progressbar</option>
        <option name="rowNumbers">true</option>
        <format type="color" field="Status">
          <colorPalette type="map">{"Healthy":#53A051,"Not-Healthy":#DC4E41}</colorPalette>
        </format>
      </table>
    </panel>
  </row>
  <row>
    <panel>
      <table>
        <title>StatefulSets on cluster $cluster$ in namespace $namespace$</title>
        <search>
          <query>cluster_name="*mckinsey*" AND cluster_name="*aws*" AND cluster_name=$cluster$ sourcetype="kube:objects:stateful_sets" metadata.namespace=$namespace$  status.replicas!=0 | dedup "metadata.name" | rename status.readyReplicas AS ReadyReplicas, status.replicas AS Replicas, metadata.name AS StatefulSet, metadata.namespace AS Namespace, "spec.template.spec.containers{}.name" AS Container, "spec.template.spec.containers{}.resources.requests.memory" AS "Mem Requests",  "spec.template.spec.containers{}.resources.limits.memory" AS "Mem Limits", "spec.template.spec.containers{}.resources.requests.cpu" AS "CPU Requests", "spec.template.spec.containers{}.resources.limits.cpu" AS "CPU Limits" | eval Status=if(ReadyReplicas==Replicas, "Healthy", "Not-Healthy") | table  cluster_name StatefulSet Status Namespace Replicas Container "Mem Requests" "Mem Limits" "CPU Requests" "CPU Limits"</query>
          <earliest>-15m@m</earliest>
          <latest>now</latest>
        </search>
        <option name="drilldown">row</option>
        <option name="refresh.display">progressbar</option>
        <option name="rowNumbers">true</option>
        <format type="color" field="Status">
          <colorPalette type="map">{"Healthy":#53A051,"Not-Healthy":#DC4E41}</colorPalette>
        </format>
      </table>
    </panel>
  </row>
  <row>
    <panel>
      <chart>
        <title>StatefulSets health in cluster $cluster$ in namespace $namespace$</title>
        <search>
          <query>cluster_name="*mckinsey*" AND cluster_name="*aws*" AND cluster_name=$cluster$ sourcetype="kube:objects:stateful_sets"  metadata.namespace=$namespace$  status.replicas!=0  | dedup "metadata.name" | rename status.readyReplicas AS ReadyReplicas, status.replicas AS Replicas | eval Status=if(ReadyReplicas==Replicas, "Healthy", "Not-Healthy") | stats count by Status</query>
          <earliest>-15m@m</earliest>
          <latest>now</latest>
        </search>
        <option name="charting.chart">pie</option>
        <option name="charting.drilldown">none</option>
        <option name="refresh.display">progressbar</option>
      </chart>
    </panel>
    <panel>
      <chart>
        <title>StorageProvisionerType in cluster $cluster$ in namespace $namespace$</title>
        <search>
          <query>cluster_name="*mckinsey*" AND cluster_name="*aws*" sourcetype="kube:objects:persistent_volume_claims" metadata.namespace=$namespace$ | dedup metadata.name | rename  "metadata.annotations.volume.beta.kubernetes.io/storage-provisioner" as StorageProvisionerType | rex field=StorageProvisionerType  mode=sed "s/^[^\/]*//" | stats count by StorageProvisionerType</query>
          <earliest>-15m@m</earliest>
          <latest>now</latest>
        </search>
        <option name="charting.chart">pie</option>
        <option name="charting.drilldown">none</option>
        <option name="refresh.display">progressbar</option>
      </chart>
    </panel>
    <panel>
      <chart>
        <title>PVCs AccessModes in cluster $cluster$ and namespace in $namespace$</title>
        <search>
          <query>cluster_name="*mckinsey*" AND cluster_name="*aws*" AND cluster_name=$cluster$ sourcetype="kube:objects:persistent_volume_claims" metadata.namespace=$namespace$ | dedup metadata.name | rename  spec.accessModes{} as AccessModes| chart count by  AccessModes</query>
          <earliest>-15m@m</earliest>
          <latest>now</latest>
        </search>
        <option name="charting.chart">pie</option>
        <option name="charting.drilldown">none</option>
        <option name="refresh.display">progressbar</option>
      </chart>
    </panel>
  </row>
  <row>
    <panel>
      <table>
        <title>PVC details on cluster $cluster$ in namespace $namespace$</title>
        <search>
          <query>cluster_name="*mckinsey*" AND cluster_name="*aws*" AND cluster_name=$cluster$ sourcetype="kube:objects:persistent_volume_claims" metadata.namespace=$namespace$ | dedup metadata.name | rename metadata.name as PVC, status.phase as Status, metadata.namespace as Namespace, status.capacity.storage as Capacity, metadata.labels.app as App, "metadata.annotations.volume.beta.kubernetes.io/storage-class" as StorageClassName, spec.accessModes{} as AccessModes, "metadata.annotations.volume.kubernetes.io/selected-node" as Node, "metadata.annotations.volume.beta.kubernetes.io/storage-provisioner" as StorageProvisioner| table cluster_name PVC Status Capacity Namespace App StorageClassName StorageProvisioner AccessModes Node</query>
          <earliest>-15m@m</earliest>
          <latest>now</latest>
        </search>
        <option name="count">5</option>
        <option name="drilldown">row</option>
        <option name="refresh.display">progressbar</option>
        <option name="rowNumbers">true</option>
        <format type="color" field="Status">
          <colorPalette type="map">{"Bound":#53A051}</colorPalette>
        </format>
      </table>
    </panel>
  </row>
  <row>
    <panel>
      <table>
        <title>Services in cluster $cluster$ in namespace $namespace$</title>
        <search>
          <query>cluster_name="*mckinsey*" AND cluster_name="*aws*" AND cluster_name=$cluster$ sourcetype="kube:objects:services"  metadata.namespace=$namespace$ status.loadBalancer.ingress{}.hostname!="" | dedup metadata.name | rename metadata.name as Service, metadata.namespace as Namespace, "status.loadBalancer.ingress{}.hostname" as ELB, "metadata.labels.app.kubernetes.io/version" as Version, "metadata.annotations.external-dns.alpha.kubernetes.io/hostname" as DNS, "metadata.annotations.service.beta.kubernetes.io/aws-load-balancer-access-log-s3-bucket-name" as "ELB log S3 bucket", "metadata.annotations.service.beta.kubernetes.io/aws-load-balancer-access-log-s3-bucket-prefix" as "S3 bucket prefix"  | table Service Namespace ELB Version "S3 bucket prefix" "ELB log S3 bucket"  DNS</query>
          <earliest>-15m@m</earliest>
          <latest>now</latest>
        </search>
        <option name="drilldown">row</option>
        <option name="rowNumbers">true</option>
      </table>
    </panel>
  </row>
</form>